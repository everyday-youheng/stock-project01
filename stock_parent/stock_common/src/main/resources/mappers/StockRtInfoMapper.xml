<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.ssm.stock.pojo.entity.StockRtInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
            <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
            <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
            <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
            <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
            <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
            <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,stock_name,
        pre_close_price,open_price,cur_price,
        min_price,max_price,trade_amount,
        trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="getStockUpDownInfos" resultType="com.ssm.stock.pojo.domain.StockUpdownDomain">
        select
            trade_amount as tradeAmt,
            pre_close_price as preClosePrice,
            (max_price-min_price)/pre_close_price as amplitude,
            stock_code as code,
            stock_name as name,
            cur_time as curDate,
            trade_volume as tradeVol,
            cur_price-pre_close_price as increase,
            (cur_price-pre_close_price)/pre_close_price as upDown,
            cur_price as tradePrice
        from stock_rt_info
        where cur_time=#{lastDate}
        order by upDown desc
    </select>
    <select id="getStockUpDownIncrease" resultType="com.ssm.stock.pojo.domain.StockUpdownDomain">
        SELECT
            trade_amount AS tradeAmt,
            pre_close_price AS preClosePrice,
            (max_price-min_price)/pre_close_price AS amplitude,
            stock_code AS CODE,
            stock_name AS NAME,
            cur_time AS CURDATE,
            trade_volume AS tradeVol,
            cur_price-pre_close_price AS increase,
            (cur_price-pre_close_price)/pre_close_price AS upDown,
            cur_price AS tradePrice
        FROM stock_rt_info
        WHERE cur_time=#{lastDate}
        ORDER BY upDown DESC LIMIT 4

    </select>
    <select id="getStockUpdownCount" resultType="java.util.Map">
        select
            tmp.time,count(*) as count
        from (
            select (cur_price-pre_close_price)/pre_close_price as upDown,date_format(cur_time,'%Y%m%d%H%i') as time from stock_rt_info
            where cur_time between   #{startTime} and #{endTime}
            <if test="flag==1">
                having upDown >=0.1
            </if>

            <if test="flag==0">
                having upDown &lt;=-0.1
            </if>
            ) as tmp
        group by tmp.time

    </select>
    <select id="getIncreaseRangeInfoByDate" resultType="java.util.Map">
        <![CDATA[
            SELECT
                tmp2.title,
                COUNT(*) AS `count`
            FROM
                (SELECT CASE
                WHEN tmp.rate > 0.07 THEN  '>7%'
                WHEN tmp.rate > 0.05 AND tmp.rate <= 0.07 THEN '5~7%'
                WHEN tmp.rate > 0.03 AND tmp.rate <= 0.05 THEN '3~5%'
                WHEN tmp.rate > 0 AND tmp.rate <= 0.03 THEN '0~3%'
                WHEN tmp.rate > -0.03 AND tmp.rate <= 0 THEN '-3~0%'
                WHEN tmp.rate > -0.05 AND tmp.rate <= -0.03 THEN '-5~-3%'
                WHEN tmp.rate > -0.07 AND tmp.rate <= -0.05 THEN '-7~-5%'
                ELSE '<-7%'
                END 'title'
            FROM
                (SELECT
                (sri.cur_price-sri.pre_close_price)/sri.pre_close_price AS rate
                FROM stock_rt_info AS sri
                WHERE sri.cur_time=#{curDate})
                AS tmp) AS tmp2
            GROUP BY tmp2.title;
        ]]>
    </select>
    <select id="getStock4MinuteInfo" resultType="com.ssm.stock.pojo.domain.Stock4MinuteDomain">
        SELECT
            cur_time    AS DATE,
            trade_amount AS tradeAmt,
            stock_code AS CODE,
            min_price AS lowPrice,
            pre_close_price AS preClosePrice,
            stock_name AS NAME,
            max_price AS highPrice,
            open_price AS openPrice,
            trade_volume AS tradeVol,
            cur_price AS tradePrice
        FROM stock_rt_info AS sri
        WHERE stock_code=#{stockCode}
         AND
         cur_time BETWEEN #{tStartDate} AND #{tEndDate}

    </select>
    <select id="getStockInfo4EvrDay" resultType="com.ssm.stock.pojo.domain.Stock4EvrDayDomain">
        select
            sri2.cur_time as date,
            sri2.trade_amount as tradeAmt,
            sri2.stock_code as code,
            sri2.min_price as lowPrice,
            sri2.stock_name as name,
            sri2.max_price as highPrice,
            sri2.open_price as openPrice,
            sri2.trade_volume as tradeVol,
            sri2.cur_price as closePrice,
            sri2.pre_close_price as preClosePrice
        from
            stock_rt_info as sri2
        where sri2.stock_code=#{stockCode}  and sri2.cur_time in (
          select
            max( sri.cur_time ) as closeDate
          from
            stock_rt_info as sri
          where
            sri.stock_code =#{stockCode}
            and sri.cur_time between #{tStartDate} and #{tEndDate}
          group by
            date_format( sri.cur_time, '%Y%m%d' )
          )
          order by sri2.cur_time;


    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ssm.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values (#{id,jdbcType=BIGINT},#{stockCode,jdbcType=CHAR},#{stockName,jdbcType=VARCHAR}
        ,#{preClosePrice,jdbcType=DECIMAL},#{openPrice,jdbcType=DECIMAL},#{curPrice,jdbcType=DECIMAL}
        ,#{minPrice,jdbcType=DECIMAL},#{maxPrice,jdbcType=DECIMAL},#{tradeAmount,jdbcType=BIGINT}
        ,#{tradeVolume,jdbcType=DECIMAL},#{curTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ssm.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="stockCode != null">stock_code,</if>
                <if test="stockName != null">stock_name,</if>
                <if test="preClosePrice != null">pre_close_price,</if>
                <if test="openPrice != null">open_price,</if>
                <if test="curPrice != null">cur_price,</if>
                <if test="minPrice != null">min_price,</if>
                <if test="maxPrice != null">max_price,</if>
                <if test="tradeAmount != null">trade_amount,</if>
                <if test="tradeVolume != null">trade_volume,</if>
                <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null"> #{id,jdbcType=BIGINT},</if>
                <if test="stockCode != null"> #{stockCode,jdbcType=CHAR},</if>
                <if test="stockName != null"> #{stockName,jdbcType=VARCHAR},</if>
                <if test="preClosePrice != null"> #{preClosePrice,jdbcType=DECIMAL},</if>
                <if test="openPrice != null"> #{openPrice,jdbcType=DECIMAL},</if>
                <if test="curPrice != null"> #{curPrice,jdbcType=DECIMAL},</if>
                <if test="minPrice != null"> #{minPrice,jdbcType=DECIMAL},</if>
                <if test="maxPrice != null"> #{maxPrice,jdbcType=DECIMAL},</if>
                <if test="tradeAmount != null"> #{tradeAmount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null"> #{tradeVolume,jdbcType=DECIMAL},</if>
                <if test="curTime != null"> #{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssm.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        <set>
                <if test="stockCode != null">
                    stock_code = #{stockCode,jdbcType=CHAR},
                </if>
                <if test="stockName != null">
                    stock_name = #{stockName,jdbcType=VARCHAR},
                </if>
                <if test="preClosePrice != null">
                    pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
                </if>
                <if test="openPrice != null">
                    open_price = #{openPrice,jdbcType=DECIMAL},
                </if>
                <if test="curPrice != null">
                    cur_price = #{curPrice,jdbcType=DECIMAL},
                </if>
                <if test="minPrice != null">
                    min_price = #{minPrice,jdbcType=DECIMAL},
                </if>
                <if test="maxPrice != null">
                    max_price = #{maxPrice,jdbcType=DECIMAL},
                </if>
                <if test="tradeAmount != null">
                    trade_amount = #{tradeAmount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=DECIMAL},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssm.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        set 
            stock_code =  #{stockCode,jdbcType=CHAR},
            stock_name =  #{stockName,jdbcType=VARCHAR},
            pre_close_price =  #{preClosePrice,jdbcType=DECIMAL},
            open_price =  #{openPrice,jdbcType=DECIMAL},
            cur_price =  #{curPrice,jdbcType=DECIMAL},
            min_price =  #{minPrice,jdbcType=DECIMAL},
            max_price =  #{maxPrice,jdbcType=DECIMAL},
            trade_amount =  #{tradeAmount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=DECIMAL},
            cur_time =  #{curTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
